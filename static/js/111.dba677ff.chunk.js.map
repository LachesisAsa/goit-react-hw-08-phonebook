{"version":3,"file":"static/js/111.dba677ff.chunk.js","mappings":"oMAEaA,EAAa,WACxB,OACE,SAAC,KAAD,CACEC,SAAS,EACTC,OAAO,MACPC,MAAM,MACNC,UAAU,cACVC,aAAc,CACZC,UAAW,IACXC,WAAY,KAEdC,aAAa,eAGlB,C,+JCdYC,EAAOC,EAAAA,EAAAA,KAAH,sNAWJC,EAAQD,EAAAA,EAAAA,MAAH,yJASLE,EAAQF,EAAAA,EAAAA,MAAH,wMAYLG,EAASH,EAAAA,EAAAA,OAAH,6P,iKCzBNI,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAoBjB,OAnBsBC,EAAAA,EAAAA,KAAdC,WAoBN,SAAClB,EAAA,EAAD,KAEA,UAAC,KAAD,CAAMmB,SApBa,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfR,GACES,EAAAA,EAAAA,IAAM,CACJC,MAAOH,EAAKI,SAASD,MAAME,MAC3BC,SAAUN,EAAKI,SAASE,SAASD,SAGlCE,KAAKC,EAAAA,IACLD,MAAK,SAAAE,GACJC,EAAAA,GAAAA,QAAA,eAAsBD,EAASE,KAAKC,KAApC,2BACD,IACAC,OAAM,kBAAMH,EAAAA,GAAAA,MAAA,6BAAN,IACTV,EAAKc,OACN,EAK+BC,aAAa,MAA3C,WACE,UAAC,KAAD,oBAEE,SAAC,KAAD,CAAOC,KAAK,QAAQJ,KAAK,cAE3B,UAAC,KAAD,uBAEE,SAAC,KAAD,CAAOI,KAAK,WAAWJ,KAAK,iBAE9B,UAAC,KAAD,CAAQI,KAAK,SAAb,qBACS,SAAC,MAAD,SAId,E,oBC3BD,EAhBc,WACZ,OACE,4BACE,SAAC,KAAD,WACE,wCAEF,SAAC,KAAD,WACE,UAAC,KAAD,YACE,SAAC,KAAD,0BACA,SAACxB,EAAD,WAKT,C,6NCdYyB,EAAY7B,EAAAA,EAAAA,IAAH,sIAQT8B,EAAY9B,EAAAA,EAAAA,GAAH,6GAOT+B,EAAgB/B,EAAAA,EAAAA,GAAH,6GAObgC,EAAehC,EAAAA,EAAAA,IAAH,qUAICiC,GAUbC,EAAYlC,EAAAA,EAAAA,IAAH,oVAmBTmC,EAAUnC,EAAAA,EAAAA,EAAH,2M","sources":["components/LoaderUser/LoaderUser.jsx","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/Login.jsx","pages/Pages.styled.js"],"sourcesContent":["import { Dna } from 'react-loader-spinner';\n\nexport const LoaderUser = () => {\n  return (\n    <Dna\n      visible={true}\n      height=\"100\"\n      width=\"100\"\n      ariaLabel=\"dna-loading\"\n      wrapperStyle={{\n        marginTop: 100,\n        marginLeft: 125,\n      }}\n      wrapperClass=\"dna-wrapper\"\n    />\n  );\n};","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  background-color: #8c8d7f57;\n  width: 300px;\n  padding: 20px;\n  margin-bottom: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  border: 2px solid #3e4d44;\n  border-radius: 10px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 15px;\n  color: #363131;\n  font-weight: 500;\n  font-size: 18px;\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n  border-radius: 3px;\n  display: flex;\n  flex-direction: column;\n  margin-top: 5px;\n  &:placeholder-shown {\n    padding: 3px;\n    font-size: 16px;\n  }\n`;\n\nexport const Button = styled.button`\n  font-family: inherit;\n  display: flex;\n  gap: 10px;\n  padding: 8px;\n  border-radius: 5px;\n  background-color: #e7dada;\n  font-weight: 700;\n  font-size: 14px;\n  &:hover,\n  &:focus {\n    background-color: #a1a1a1;\n  }\n`;","import { unwrapResult } from '@reduxjs/toolkit';\nimport { LoaderUser } from 'components/LoaderUser/LoaderUser';\nimport { useAuth } from 'hooks/useAuth';\nimport { toast } from 'react-hot-toast';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from '../../redux/auth/operations';\nimport { Button, Form, Input, Label } from './LoginForm.styled';\nimport { FaUserPlus } from 'react-icons/fa';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const { isLoading } = useAuth();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    )\n      .then(unwrapResult)\n      .then(response => {\n        toast.success(`User ${response.user.name} was login successfully`);\n      })\n      .catch(() => toast.error(`Something wrong, try again`));\n    form.reset();\n  };\n\n  return isLoading ? (\n    <LoaderUser />\n  ) : (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Label>\n        Email\n        <Input type=\"email\" name=\"email\" />\n      </Label>\n      <Label>\n        Password\n        <Input type=\"password\" name=\"password\" />\n      </Label>\n      <Button type=\"submit\">\n        Log In <FaUserPlus />\n      </Button>\n    </Form>\n  );\n};","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport { Helmet } from 'react-helmet-async';\nimport { Container, ContentBlock, TitleForm } from './Pages.styled';\n\nconst Login = () => {\n  return (\n    <div>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <Container>\n        <ContentBlock>\n          <TitleForm>Login Form</TitleForm>\n          <LoginForm />\n        </ContentBlock>\n      </Container>\n    </div>\n  );\n};\n\nexport default Login;","import styled from '@emotion/styled';\nimport url from '../img/bg-form.jpg';\n\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: centre;\n  justify-content: space-around;\n  gap: 20px;\n  padding: 0 40px;\n`;\n\nexport const TitleForm = styled.h1`\n  text-align: center;\n  font-size: 34px;\n  color: orange;\n  margin-bottom: 20px;\n`;\n\nexport const TitleContacts = styled.h2`\n  text-align: center;\n  font-size: 34px;\n  color: orange;\n  margin-bottom: 20px;\n`;\n\nexport const ContentBlock = styled.div`\n  width: 480px;\n  background-color: #cccccc;\n  height: 480px;\n  background-image: url(${url});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  border: 5px solid black;\n  // border-bottom: 80px solid black;\n  border-radius: 10px;\n  padding: 20px 15px;\n`;\n\nexport const ScrollBar = styled.div`\n  height: 200px;\n  overflow-y: scroll;\n  ::-webkit-scrollbar {\n    width: 10px;\n  }\n  ::-webkit-scrollbar-track {\n    background: #f1f1f1;\n  }\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    background: #888;\n  }\n  /* Handle on hover */\n  ::-webkit-scrollbar-thumb:hover {\n    background: #555;\n  }\n`;\n\nexport const Message = styled.p`\n  padding: 3px 8px;\n  margin-left: 35px;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.52;\n  color: #363131;\n  border-radius: 3px;\n  background-color: #71717157;\n`;"],"names":["LoaderUser","visible","height","width","ariaLabel","wrapperStyle","marginTop","marginLeft","wrapperClass","Form","styled","Label","Input","Button","LoginForm","dispatch","useDispatch","useAuth","isLoading","onSubmit","e","preventDefault","form","currentTarget","logIn","email","elements","value","password","then","unwrapResult","response","toast","user","name","catch","reset","autoComplete","type","Container","TitleForm","TitleContacts","ContentBlock","url","ScrollBar","Message"],"sourceRoot":""}