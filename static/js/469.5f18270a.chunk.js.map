{"version":3,"file":"static/js/469.5f18270a.chunk.js","mappings":"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","sources":["components/LoaderUser/LoaderUser.jsx","components/ContactForm/ContactForm.styled.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","redux/filter/selectors.js","redux/selectors.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Notification/Notification.styled.js","components/Notification/Notification.jsx","components/Loader/Loader.jsx","pages/Contacts.jsx","pages/Pages.styled.js"],"sourcesContent":["import { Dna } from 'react-loader-spinner';\n\nexport const LoaderUser = () => {\n  return (\n    <Dna\n      visible={true}\n      height=\"100\"\n      width=\"100\"\n      ariaLabel=\"dna-loading\"\n      wrapperStyle={{\n        marginTop: 100,\n        marginLeft: 125,\n      }}\n      wrapperClass=\"dna-wrapper\"\n    />\n  );\n};","import styled from '@emotion/styled';\n\nexport const FormContainer = styled.form`\n  background-color: #8c8d7f57;\n  width: 300px;\n  padding: 20px;\n  margin-bottom: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  border: 2px solid #3e4d44;\n  border-radius: 10px;\n`;\n\nexport const Label = styled.label`\n  color: orange;\n  font-weight: 500;\n  font-size: 18px;\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n  border-radius: 3px;\n  display: flex;\n  flex-direction: column;\n  margin-top: 5px;\n  margin-bottom: 15px;\n  &:placeholder-shown {\n    padding: 3px;\n    font-size: 16px;\n  }\n`;\n\nexport const Button = styled.button`\n  font-family: inherit;\n  display: flex;\n  gap: 10px;\n  padding: 8px;\n  border-radius: 5px;\n  background-color: #e7dada;\n  font-weight: 700;\n  font-size: 14px;\n  &:hover,\n  &:focus {\n    background-color: #a1a1a1;\n  }\n`;","export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;","import { FormContainer, Input, Button, Label } from './ContactForm.styled.styled';\nimport { addContact } from 'redux/contacts/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport toast from 'react-hot-toast';\nimport { IoMdPersonAdd } from 'react-icons/io';\nimport { unwrapResult } from '@reduxjs/toolkit';\n\nconst ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contact = { name, number };\n    for (let item of contacts) {\n      if (contact.name.toLowerCase() === item.name.toLowerCase()) {\n        toast.error(`${contact.name} is already in contacts`);\n        resetForm();\n        return;\n      }\n    }\n    dispatch(addContact(contact))\n      .then(unwrapResult)\n      .then(response =>\n        toast.success(`${response.name} was added to your List of Contacts`)\n      )\n      .catch(e => toast.error(`Something wrong ${e.message}`));\n    resetForm();\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    if (name === 'name') setName(value);\n    if (name === 'number') setNumber(value);\n  };\n\n  return (\n    <FormContainer autoComplete=\"of\" onSubmit={handleSubmit}>\n      <Label htmlFor=\"name\">\n        Name:\n        <Input\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          placeholder=\"Enter full name or nick\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label htmlFor=\"number\">\n        Number:\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          placeholder=\"+000-00-000-00-00\"\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">\n        Add\n        <IoMdPersonAdd size={16} />\n      </Button>\n    </FormContainer>\n  );\n};\n\nexport default ContactForm;","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  background-color: #ffffffd4;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border: 1px solid transparent;\n  border-radius: 5px;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  padding: 3px 8px;\n  border-radius: 3px;\n  background-color: #71717157;\n  font-size: 12px;\n  &:hover,\n  &:focus {\n    background-color: #a1a1a1;\n  }\n`;\n\nexport const Number = styled.span`\n  margin-left: 10px;\n`;\n\nexport const Contact = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Name = styled.p`\n  margin-left: 10px;\n`;","import { Item, Button, Number, Contact, Name } from './ContactItem.styled';\nimport PropTypes from 'prop-types';\nimport { unwrapResult } from '@reduxjs/toolkit';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport toast from 'react-hot-toast';\nimport { useState } from 'react';\nimport { FaPhone } from 'react-icons/fa';\nimport { MdDelete, MdAutoDelete } from 'react-icons/md';\n\nconst ContactItem = ({ id, name, number }) => {\n  const [deletingId, setDeletingId] = useState('');\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const handleDelete = () => {\n    setDeletingId(id);\n    dispatch(deleteContact(id))\n      .then(unwrapResult)\n      .then(response => {\n        toast.error(\n          `Contact ${response.name} was deleted from your List of Contacts`\n        );\n      })\n      .catch(e => toast.error(`Something wrong: ${e.message}`));\n  };\n  const isDeleting = isLoading && id === deletingId;\n\n  return (\n    <Item>\n      <Contact>\n        <FaPhone />\n        <Name>{name}:</Name>\n        <Number>{number}</Number>\n      </Contact>\n      <Button type=\"button\" onClick={handleDelete} disabled={isDeleting}>\n        {isDeleting ? <MdAutoDelete size={16} /> : <MdDelete size={16} />}\n      </Button>\n    </Item>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;","import styled from '@emotion/styled';\n\nexport const ContactsList = styled.ul`\n  width: 320px;\n  min-height: 350px;\n  padding-left: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;","export const selectFilter = state => state.filters;","import { createSelector } from '@reduxjs/toolkit';\nimport { selectContacts } from './contacts/selectors';\nimport { selectFilter } from './filter/selectors';\n\nexport const selectFilterList = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);","import ContactItem from '../ContactItem';\nimport { ContactsList } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { selectFilterList } from 'redux/selectors';\n\nconst ContactList = () => {\n  const filterList = useSelector(selectFilterList);\n  return (\n    <ContactsList>\n      {filterList.map(({ id, name, number }) => {\n        return <ContactItem key={id} id={id} name={name} number={number} />;\n      })}\n    </ContactsList>\n  );\n};\n\nexport default ContactList;","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  background-color: #8c8d7f57;\n  width: 300px;\n  padding: 10px;\n  margin-bottom: 10px;\n  margin-left: auto;\n  margin-right: auto;\n  border: 2px solid #3e4d44;\n  border-radius: 10px;\n`;\n\nexport const Label = styled.label`\n  color: orange;\n  font-weight: 500;\n  font-size: 18px;\n`;\n\nexport const Input = styled.input`\n  display: flex;\n  flex-direction: column;\n  margin-top: 5px;\n  margin-bottom: 25px;\n`;","import { Container, Input, Label } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filter/filtersSlice';\nimport { selectFilter } from 'redux/filter/selectors';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const contacts = useSelector(selectContacts);\n  const handleOnChange = e => dispatch(setFilter(e.target.value));\n\n  return (\n    <Container>\n      <Label htmlFor=\"filter\">\n        Find contacts by name:\n        <Input\n          name=\"filter\"\n          type=\"text\"\n          value={filter}\n          onChange={handleOnChange}\n          disabled={contacts.length < 2 && !filter}\n        />\n      </Label>\n    </Container>\n  );\n};\n\nexport default Filter;","import styled from '@emotion/styled';\n\nexport const Message = styled.p`\n  color: #fa0000;\n  font-size: 28px;\n  text-align: center;\n`;","import PropTypes from 'prop-types';\nimport { Message } from './Notification.styled';\n\nexport const Notification = ({ message }) => {\n  return <Message>{message}</Message>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ThreeDots\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"#3e4d44\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{\n        marginTop: 40,\n        marginLeft: 150,\n      }}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport {\n  Container,\n  TitleForm,\n  TitleContacts,\n  ContentBlock,\n  ScrollBar,\n  Message,\n} from './Pages.styled';\n\nimport { selectFilterList } from '../redux/selectors';\nimport Filter from 'components/Filter';\nimport {\n  selectError,\n  selectIsLoading,\n  selectContacts,\n} from '../redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Notification } from 'components/Notification/Notification';\nimport { Loader } from 'components/Loader/Loader';\nimport { RiContactsFill } from 'react-icons/ri';\nimport { Helmet } from 'react-helmet-async';\nimport { useAuth } from 'hooks/useAuth';\nimport { LoaderUser } from 'components/LoaderUser/LoaderUser';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  const { isLoading } = useAuth();\n  const contacts = useSelector(selectContacts);\n  const filterList = useSelector(selectFilterList);\n  const isLoadingContacts = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  return (\n    <Container>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      {isLoading ? (\n        <LoaderUser />\n      ) : (\n        <>\n          {' '}\n          <ContentBlock>\n            <TitleForm>Phonebook</TitleForm>\n            <ContactForm />\n          </ContentBlock>\n          <ContentBlock>\n            <TitleContacts>Contacts</TitleContacts>\n\n            {error && <Notification message=\"Contacts no found\" />}\n            {!isLoadingContacts && !error && contacts.length === 0 && (\n              <Message>\n                You have no contacts, add your first contact <RiContactsFill />\n              </Message>\n            )}\n            {contacts.length > 0 && <Filter />}\n            {isLoadingContacts && !error && <Loader />}\n            {filterList.length > 0 && (\n              <ScrollBar>\n                <ContactList />\n              </ScrollBar>\n            )}\n          </ContentBlock>\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default Contacts;","import styled from '@emotion/styled';\nimport url from '../img/bg-form.jpg';\n\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: centre;\n  justify-content: space-around;\n  gap: 20px;\n  padding: 0 40px;\n`;\n\nexport const TitleForm = styled.h1`\n  text-align: center;\n  font-size: 34px;\n  color: orange;\n  margin-bottom: 20px;\n`;\n\nexport const TitleContacts = styled.h2`\n  text-align: center;\n  font-size: 34px;\n  color: orange;\n  margin-bottom: 20px;\n`;\n\nexport const ContentBlock = styled.div`\n  width: 480px;\n  background-color: #cccccc;\n  height: 480px;\n  background-image: url(${url});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  border: 5px solid black;\n  // border-bottom: 80px solid black;\n  border-radius: 10px;\n  padding: 20px 15px;\n`;\n\nexport const ScrollBar = styled.div`\n  height: 200px;\n  overflow-y: scroll;\n  ::-webkit-scrollbar {\n    width: 10px;\n  }\n  ::-webkit-scrollbar-track {\n    background: #f1f1f1;\n  }\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    background: #888;\n  }\n  /* Handle on hover */\n  ::-webkit-scrollbar-thumb:hover {\n    background: #555;\n  }\n`;\n\nexport const Message = styled.p`\n  padding: 3px 8px;\n  margin-left: 35px;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.52;\n  color: #363131;\n  border-radius: 3px;\n  background-color: #71717157;\n`;"],"names":["LoaderUser","visible","height","width","ariaLabel","wrapperStyle","marginTop","marginLeft","wrapperClass","FormContainer","styled","Label","Input","Button","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","useSelector","dispatch","useDispatch","useState","name","setName","number","setNumber","resetForm","handleChange","e","target","value","autoComplete","onSubmit","preventDefault","contact","item","toLowerCase","toast","addContact","then","unwrapResult","response","catch","message","htmlFor","type","id","onChange","pattern","placeholder","title","required","size","Item","Number","Contact","Name","deletingId","setDeletingId","isDeleting","onClick","deleteContact","disabled","ContactsList","selectFilter","filters","selectFilterList","createSelector","filter","normalizedFilter","includes","filterList","map","Container","setFilter","length","Message","Notification","Loader","radius","color","wrapperClassName","useEffect","fetchContacts","useAuth","isLoadingContacts","TitleForm","TitleContacts","ContentBlock","url","ScrollBar"],"sourceRoot":""}